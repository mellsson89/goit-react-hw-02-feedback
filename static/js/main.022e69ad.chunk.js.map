{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/feedbackOptions.module.scss"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","onClick","className","style","option__button","Section","title","children","Notification","message","App","state","updateState","value","setState","prevState","countTotalFeedback","Object","values","reduce","accum","countPositiveFeedbackPercentage","toFixed","this","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kOAoBeA,EAjBG,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAKC,EAAP,EAAOA,QAAQC,EAAf,EAAeA,IAAIC,EAAnB,EAAmBA,MAAMC,EAAzB,EAAyBA,mBAAzB,OAClB,gCACI,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,oDAAuBC,S,gBCKZC,EAVQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAQC,EAAV,EAAUA,gBAAV,OACnBD,EAAQE,KAAI,SAAAC,GAAM,OACV,wBAAqBC,QAAS,kBAAMH,EAAgBE,IAASE,UAAWC,IAAMC,eAA9E,SAA+FJ,GAAlFA,OCUVK,EAZA,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAMC,EAAR,EAAQA,SAAR,OACX,oCACI,6BAAKD,IACJC,MCIMC,EARM,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACrB,4BAAIA,KCGEC,E,4MAEFC,MAAQ,CACJpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTmB,YAAc,SAACC,GACX,EAAKC,UAAS,SAAAC,GAAS,sBAClBF,EAAQE,EAAUF,GAAS,O,EAIpCG,mBAAqB,WAEjB,OADiBC,OAAOC,OAAO,EAAKP,OAClBQ,QAAO,SAACC,EAAMP,GAAP,OAAiBO,EAAMP,IAAM,I,EAI1DQ,gCAAkC,WAC9B,OAAO,EAAKV,MAAMpB,KAAO,GAAM,EAAKoB,MAAMpB,KAAO,EAAKyB,qBAAwB,KAAKM,UAAY,IAAM,G,4CAIzG,WACG,MAAyBC,KAAKZ,MAAvBpB,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,QAAQC,EAApB,EAAoBA,IACdI,EAAQoB,OAAOO,KAAKD,KAAKZ,OAE9B,OACI,qCACI,cAAC,EAAD,CAASL,MAAO,wBAAhB,SACI,cAAC,EAAD,CAAiBT,QAASA,EAASC,gBAAiByB,KAAKX,gBAE7E,cAAC,EAAD,CAASN,MAAO,cAAhB,SACKf,GAAQC,GAAWC,EAAM,EACtB,cAAC,EAAD,CAAYF,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAO6B,KAAKP,qBACpDrB,mBAAoB4B,KAAKF,oCAAuC,cAAC,EAAD,CAAcZ,QAAS,+B,GArCzFgB,aA8CHf,IChDfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,eAAiB,2C","file":"static/js/main.022e69ad.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst Statistics =({good,neutral,bad,total,positivePercentage}) => (\n<div>\n    <p>Good:{good}</p>\n    <p>Neutral:{neutral}</p>\n    <p>Bad:{bad}</p>\n    <p>Total:{total}</p>\n    <p>Positive feedback: {positivePercentage}</p>\n</div>\n)\n\nStatistics.propTypes={\n    good:PropTypes.number.isRequired,\n    neutral:PropTypes.number.isRequired,\n    bad:PropTypes.number.isRequired,\n    total:PropTypes.number.isRequired,\n    positivePercentage:PropTypes.node.isRequired,\n}\nexport default Statistics;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport style from './feedbackOptions.module.scss'\n\nconst FeedbackOptions =({options,onLeaveFeedback}) => (\n    options.map(option => (\n            <button key={option} onClick={() => onLeaveFeedback(option)} className={style.option__button}>{option}</button>\n    ))\n)\n\nFeedbackOptions.propTypes= {\n    options:PropTypes.node.isRequired\n}\n\nexport default FeedbackOptions;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\n\nconst Section =({title,children}) => (\n    <section>\n        <h2>{title}</h2>\n        {children}\n    </section>\n)\n\nSection.propTypes = {\n    title:PropTypes.string.isRequired,\n\n}\n\nexport default Section;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst Notification = ({message}) => (\n<p>{message}</p>\n)\n\nNotification.propTypes={\n    message:PropTypes.string\n}\n\nexport default Notification;","import React,{Component} from \"react\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification\";\n\n\nclass App extends Component {\n\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    }\n\n    updateState = (value) => {\n        this.setState(prevState => ({\n            [value]: prevState[value] + 1\n        }))\n    }\n\n    countTotalFeedback = () => {\n        const valueState=Object.values(this.state)\n        return valueState.reduce((accum,value) => accum+value,0);\n\n    }\n\n    countPositiveFeedbackPercentage = () => {\n        return this.state.good > 0 ? ((this.state.good / this.countTotalFeedback()) * 100).toFixed() + '%' : 0;\n    }\n\n\n    render() {\n       const {good,neutral,bad}=this.state;\n       const options=Object.keys(this.state)\n\n        return (\n            <>\n                <Section title={'Please leave feedback'}>\n                    <FeedbackOptions options={options} onLeaveFeedback={this.updateState}/>\n                </Section>\n<Section title={'Statistical'}>\n    {good || neutral || bad > 0 ?\n        <Statistics good={good} neutral={neutral} bad={bad} total={this.countTotalFeedback()}\n                    positivePercentage={this.countPositiveFeedbackPercentage()}/> : <Notification message={'No feedback given'}/>}\n\n</Section>\n\n            </>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option__button\":\"feedbackOptions_option__button__iGjmy\"};"],"sourceRoot":""}